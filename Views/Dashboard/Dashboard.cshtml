@model IEnumerable<Productivity_Analytics.Models.Employee>
@using Productivity_Analytics.Models
@{
    Layout = "_DashboardLayout";

    // =================== C# RATING CONVERTER ===================
    // This is the same converter used in the Project and Archived views
    string GetRatingString(decimal? rating)
    {
        if (!rating.HasValue) return "No Rating";

        return rating.Value switch
        {
            5m => "Excellent (5)",
            4m => "Very Good (4)",
            3m => "Good (3)",
            2m => "Needs Improvement (2)",
            1m => "Need Training (1)",
            0m => "Firable (0)",
            _ => rating.Value.ToString("0.0") // Fallback for decimals like 3.5
        };
    }
    // ==========================================================
}

<h1 class="mt-4">Dashboard</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">Productivity Analytics</li>
</ol>
<div class="row">
    <div class="col-xl-6">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-area me-1"></i>
                Employee Area Chart
            </div>
            <div class="card-body"><canvas id="myAreaChart" width="100%" height="40"></canvas></div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-bar me-1"></i>
                Project Bar Chart
            </div>
            <div class="card-body"><canvas id="myBarChart" width="100%" height="40"></canvas></div>
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-body">
        <table class="table table-bordered table-hover" id="datatablesSimple">
            <thead class="table-light">
                <tr>
                    <th>Name</th>
                    <th>Age</th>
                    <th>Sex</th>
                    <th>Years of Experience</th>
                    <th>Education Level</th>
                    <th>Department</th>
                    <th>Rating</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var emp in Model)
                    {
                        <tr>
                            <td>@emp.Name</td>
                            <td>@emp.Age</td>
                            <td>@emp.Sex</td>
                            <td>@emp.YearsOfExperience</td>
                            <td>@emp.EducationLevel</td>
                            <td>@(emp.Department?.DepartmentName ?? "No Department")</td>

                            @* FIX: Use the new converter function to display rating as a string *@
                            <td>@GetRatingString(emp.Rating)</td>


                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No employees found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>